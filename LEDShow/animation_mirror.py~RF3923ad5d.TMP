from _animation import Animation
import time
import utils

class AnimationMirror(Animation):
    """PLACEHOLDER ANIMATION"""

    def __init__(self):
        self.color1 = (0, 255, 0)
        self.color2 = (255, 0, 255)
        self.y1 = -1
        self._running = False

    def run(self, leds):
       self._running = True
       self.square1(leds, self.color1[0], self.color1[1], self.color1[2])
       self._running = False
       
    def running(self):
        return self._running             

    def pingInterval(self):
        return 1

    def pingLoop(self):
        return False

    def square1(self, leds, r, g, b):
        y = int(utils.mapRange(leds.distance, 80.0, 312.0, 30.0, 6.0))
        if(self.y1 == y):
            return
        if(self.y1 == -1):
            self.y1 = y
            self.drawSquare(leds, 1, self.y1)
            leds.show()
        else:
            direction = 1 if y > self.y1 else -1
            for i in range(self.y1, y, direction): 
                self.clearSquare(leds, 1, i)
                self.drawSquare(leds, 1, i+direction)
                leds.show()
                time.sleep(0.05)
            self.y1 = y

    def drawSquare(self, leds, x, y):
        for w in range(6):
            for h in range(6):
                row = y-h
                c = self.color1 if row < 18 else self.color2
                leds.setPixelColorXY(x+w, row, c[0], c[1], c[2])                                 

    def clearSquare(self, leds, x, y):
        for w in range(6):
            for h in range(6):
                leds.setPixelColorXY(x+w, y-h, 0, 0, 0)